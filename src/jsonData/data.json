{"404":{"slug":404,"title":404,"navText":null,"layout":"_layout","body":"<h2 id=\"whoops-looks-like-what-you-re-looking-for-can-t-be-found-\">Whoops. Looks like what you&#39;re looking for can&#39;t be found.</h2>\n","updatedAt":"2017-12-26T06:13:22.981Z"},"docs":{"backgrounds":{"slug":"backgrounds","title":"Background","navText":"Backgrounds","layout":"_layout","body":"<h2 id=\"backgrounds\">Backgrounds</h2>\n<p>Background classes help with adjusting background images. Using these classes assumes a background image is added to the element in your project&#39;s CSS.</p>\n<h4 id=\"available-classes-for-backgrounds-\">Available classes for backgrounds:</h4>\n<div class=\"flex flex-middle\">\n  <div class=\"col-12-12\"><code>.bg-cover</code></div>\n  <div class=\"col-6-12\">\n      <textarea class=\"bg-c-w\"><div id=\"backgrounds-1\" class=\"bg-cover\"></div></textarea>\n  </div>\n  <div class=\"col-6-12 bg-c-c\">\n  </div>\n</div>\n\n<hr>\n<div class=\"flex flex-middle\">\n<div class=\"col-12-12\"><code>.bg-no-repeat</code></div>\n  <div class=\"col-6-12\">\n      <textarea class=\"bg-nr-w\"><div id=\"backgrounds-2\" class=\"bg-no-repeat\"></div></textarea>\n  </div>\n  <div class=\"col-6-12 bg-nr-c\">\n\n  </div>\n</div>\n\n<hr>\n<div class=\"flex flex-middle\">\n<div class=\"col-12-12\"><code>.bg-fixed</code></div>\n  <div class=\"col-6-12\">\n      <textarea class=\"bg-f-w\"><div id=\"backgrounds-3\" class=\"bg-fixed\"></div></textarea>\n  </div>\n  <div class=\"col-6-12 bg-f-c\">\n\n  </div>\n</div>\n\n\n\n<hr>\n<div class=\"flex flex-middle\">\n<div class=\"col-12-12\"><code>.bg-center</code></div>\n  <div class=\"col-6-12\">\n      <textarea class=\"bg-ctr-w\"><div id=\"backgrounds-4\" class=\"bg-center\"></div></textarea>\n  </div>\n  <div class=\"col-6-12 bg-ctr-c\">\n\n  </div>\n</div>\n\n<p><em>*</em> IDs are added to show the background image and do not affect backgrounds or classes in any other way.</p>\n<h3 id=\"overlays\">Overlays</h3>\n<p>Overlays apply a semitransparent color over the background of it&#39;s container element. Assuming you have a <code>div</code> with a background image and <code>relative</code> positioned, you can add a <code>div</code> with the class <code>overlay</code>. Additionally, adding class <code>overlay-1</code> through <code>overlay-4</code> will change the opacity of the overlay. The color can be adjusted in the <code>vars.css</code> file.</p>\n<div class=\"flex flex-middle\">\n    <div class=\"col-6-12\">\n        <textarea class=\"o-w\"><div id=\"backgrounds-5\" class=\"bg-cover relative\">\n        <div class=\"overlay\"></div>\n</div></textarea>\n    </div>\n    <div class=\"col-6-12 o-c\">\n\n    </div>\n</div>","updatedAt":"2017-12-30T05:13:40.740Z"},"buttons":{"slug":"buttons","title":"buttons","navText":"Buttons","layout":"_layout","body":"<h2 id=\"buttons\">Buttons</h2>\n<p>Buttons are mostly stolen from <a href=\"http://getskeleton.com\">Skeleton</a>. It is a really nice and simple approach to creating buttons. You can, of course, override, re-write or not include the buttons CSS to suit your project. But Skeleton provides a nice starting point, in my opinion. Color can be changed in the <code>vars.css</code> file.</p>\n<h4 id=\"available-classes-for-buttons-\">Available classes for buttons:</h4>\n<div class=\"flex flex-middle\">\n  <div class=\"col-12-12\"><code>.btn</code> and <code>.btn-primary</code></div>\n  <div class=\"col-6-12\">\n      <textarea class=\"btn-w\">\n<p>\n  <button>Button</button>\n</p>\n\n<p>\n  <a class=\"btn\">Link Button</a>\n</p>\n\n<p>\n  <button class=\"btn btn-primary\">Primary Button</button>\n</p>\n</textarea>\n  </div>\n  <div class=\"col-6-12 btn-c\">\n  </div>\n</div>\n\n<hr>\n","updatedAt":"2017-12-30T05:43:56.622Z"},"display":{"slug":"display","title":"display","navText":"Display","layout":"_layout","body":"<h2 id=\"display\">Display</h2>\n<p>Display classes are semantic representations of CSS display properties and available with <a href=\"docs/mobile-first\">mobile-first modifiers</a> (<code>-m</code> and <code>-l</code>).</p>\n<h4 id=\"available-classes-for-display-\">Available classes for display:</h4>\n<div class=\"flex flex-middle\">\n  <div class=\"col-12-12\"><code>.none</code>, <code>.inline</code>, <code>inline-block</code>, and <code>block</code></div>\n  <div class=\"col-6-12\">\n      <textarea class=\"d-w\">\n<p class=\"none\">will not display</p>\n<p class=\"inline\">Inline</p>\n<p class=\"inline-block\">Inline block</p>\n<p class=\"block\">block</p>\n</textarea>\n  </div>\n  <div class=\"col-6-12 d-c\">\n  </div>\n</div>\n\n<hr>\n","updatedAt":"2017-12-30T05:52:37.604Z"},"flex":{"slug":"flex","title":"flex","navText":"Flex","layout":"_layout","body":"<h2 id=\"flexbox\">Flexbox</h2>\n","updatedAt":"2017-12-26T14:24:31.983Z"},"forms":{"slug":"forms","title":"forms","navText":"Forms","layout":"_layout","body":"<h2 id=\"forms\">Forms</h2>\n","updatedAt":"2017-12-30T21:27:29.324Z"},"grid":{"slug":"grid","title":"grid","navText":"grid","layout":"_layout","body":"<h2 id=\"grid\">Grid</h2>\n","updatedAt":"2017-12-26T14:17:37.141Z"},"height-&-width":{"slug":"height-&-width","title":"height & width","navText":"height & width","layout":"_layout","body":"<h2 id=\"height-width\">Height &amp; Width</h2>\n","updatedAt":"2017-12-26T14:17:25.374Z"},"image":{"slug":"images","title":"images","navText":"images","layout":"_layout","body":"<h2 id=\"images\">Images</h2>\n","updatedAt":"2017-12-30T21:27:29.325Z"},"index":{"slug":"index","title":"index","navText":"index","layout":"_layout","body":"<h2 id=\"proin-auctor-orci-eros\">Proin auctor orci eros</h2>\n","updatedAt":"2017-12-30T01:39:16.612Z"},"list":{"slug":"list","title":"list","navText":"list","layout":"_layout","body":"<h2 id=\"proin-auctor-orci-eros\">Proin auctor orci eros</h2>\n","updatedAt":"2017-12-26T14:16:25.707Z"},"margin":{"slug":"margin","title":"margin","navText":"margin","layout":"_layout","body":"<h2 id=\"proin-auctor-orci-eros\">Proin auctor orci eros</h2>\n","updatedAt":"2017-12-26T14:19:08.287Z"},"padding":{"slug":"padding","title":"padding","navText":"padding","layout":"_layout","body":"<h2 id=\"proin-auctor-orci-eros\">Proin auctor orci eros</h2>\n","updatedAt":"2017-12-26T14:18:31.827Z"},"position":{"slug":"position","title":"position","navText":"position","layout":"_layout","body":"<h2 id=\"position\">Position</h2>\n","updatedAt":"2017-12-26T14:19:50.843Z"},"print":{"slug":"print","title":"print","navText":"print","layout":"_layout","body":"<h2 id=\"print\">Print</h2>\n","updatedAt":"2017-12-26T14:22:09.586Z"},"reset":{"slug":"reset","title":"reset","navText":"reset","layout":"_layout","body":"<h2 id=\"reset\">Reset</h2>\n","updatedAt":"2017-12-26T14:22:15.908Z"},"reset-utilities":{"slug":"reset-utilities","title":"reset utilities","navText":"reset utilities","layout":"_layout","body":"<h2 id=\"reset-utilities\">Reset Utilities</h2>\n","updatedAt":"2017-12-26T14:22:30.315Z"},"tables":{"slug":"tables","title":"tables","navText":"tables","layout":"_layout","body":"<h2 id=\"tables\">Tables</h2>\n","updatedAt":"2017-12-26T14:22:53.194Z"},"text-font":{"slug":"text-font","title":"text & font","navText":"text & font","layout":"_layout","body":"<h2 id=\"text-font\">Text &amp; Font</h2>\n","updatedAt":"2017-12-26T14:21:43.502Z"},"typography":{"slug":"typography","title":"typography","navText":"typography","layout":"_layout","body":"<h2 id=\"typography\">Typography</h2>\n","updatedAt":"2017-12-26T14:23:28.755Z"},"xl":{"slug":"xl","title":"xl","navText":"xl","layout":"_layout","body":"<h2 id=\"xl\">XL</h2>\n","updatedAt":"2017-12-26T14:23:41.661Z"}},"index":{"slug":"index","title":"Útil CSS • A CSS Utility Kit","navText":"Intro","layout":"_layout","body":"<h2 id=\"utilities-framework\">Utilities ≠ Framework</h2>\n<p>Útil is not a framework but rather a set of utility classes that allow for rapid layouts.</p>\n<p>Where a framework can be rather opinionated in it&#39;s markup, layout and/or styling, utility classes leave all that up to you and only provide classes that help you layout your site according to your project&#39;s needs.</p>\n<h3 id=\"why-\">Why?</h3>\n<p>This idea was sparked long ago when I read Dave Rupert&#39;s post <a href=\"http://daverupert.com/2013/04/responsive-deliverables/\">Responsive Deliverables</a> wherein he famously wrote <em>&quot;Tiny Bootstraps for Every Client.&quot;</em>:</p>\n<blockquote>\n<p>Responsive deliverables should look a lot like fully-functioning Twitter Bootstrap-style systems custom tailored for your clients’ needs. These living code samples are self-documenting style guides that extend to accommodate a client’s needs as well as the needs of the ever-evolving multi-device web.</p>\n</blockquote>\n<p>Since then, I have been borrowing/stealing pieces of code and conventions from a multitude of frameworks and blog posts. It is only recently that I began compiling and keeping a collection of the best of these frameworks. I&#39;ve also learned a lot from <a href=\"http://basscss.com/\">BassCSS</a> and <a href=\"http://tachyons.io/\">Tachyons</a> and I may have just duplicated their efforts. However, the best way to learn is to build things, and here is my ongoing effort to build something useful for myself. I&#39;ve also borrowed code from <a href=\"http://getskeleton.com/\">Skeleton</a>, whose simplicity I&#39;ve loved for many years.</p>\n<p>I&#39;ve made a few decisions that I think are important to keep in mind:</p>\n<ol>\n<li>No CSS pre/post processors (more on this later)</li>\n<li>No prefixes. These can be added a variety of ways in your build process.</li>\n<li>No JavasScript. All your JavaScript fanciness is up to you.</li>\n</ol>\n<p>And on to the good parts...</p>\n<h3 id=\"mobile-first\">Mobile First</h3>\n<p>All classes use the same mobile-first approach. This means that any class without a modifier will be applied to all screens starting from mobile, or small, screens all the way up to large screens.</p>\n<p>For example, to hide or use <code>display: none</code> on all screens, you can add a <code>none</code> class like so:</p>\n<pre><code>&lt;div class=&quot;none&quot;&gt;This will not display on any screen&lt;/div&gt;\n</code></pre><p>However, if you would only like to hide it on medium to large screens, you can do the following:</p>\n<pre><code>&lt;div class=&quot;none-m&quot;&gt;This will not display on medium to large screens&lt;/div&gt;\n</code></pre><p>You can also reverse the display character if by adding a <code>block</code>, <code>inline-block</code> or <code>inline</code> class. If, for instance, you want to hide a div on mobile screens, you can do the following:</p>\n<pre><code>&lt;div class=&quot;none block-m&quot;&gt;This will not display on any mobile screens&lt;/div&gt;\n</code></pre><p>All classes will have the <code>-m</code> or <code>-l</code> modifiers available.</p>\n","updatedAt":"2017-12-30T21:27:29.326Z"}}